generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id        Int      @id @unique(map: "Address_id_key") @default(autoincrement()) @db.UnsignedInt
  userId    Int      @db.UnsignedInt
  name      String
  province  String
  city      String
  county    String
  address   String
  phone     String
  isDefault Int?     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime
  users     users    @relation(fields: [userId], references: [id], map: "Address_userId_fkey")
  orders    orders[]

  @@index([userId], map: "Address_userId_fkey")
}

model cart {
  id        Int      @id @unique(map: "Cart_id_key") @default(autoincrement()) @db.UnsignedInt
  userId    Int      @db.UnsignedInt
  goodId    Int      @db.UnsignedInt
  num       Int?     @default(1)
  isChecked Int?     @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime
  goods     goods    @relation(fields: [goodId], references: [id], map: "Cart_goodId_fkey")
  users     users    @relation(fields: [userId], references: [id], map: "Cart_userId_fkey")

  @@index([goodId], map: "Cart_goodId_fkey")
  @@index([userId], map: "Cart_userId_fkey")
}

model categories {
  id        Int      @id @unique(map: "Categories_id_key") @default(autoincrement()) @db.UnsignedInt
  name      String   @db.VarChar(255)
  pid       Int
  status    Int      @default(0)
  level     Int  
  group     String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime
  goods     goods[]
}

model comments {
  id        Int      @id @unique(map: "Comments_id_key") @default(autoincrement())
  userId    Int      @db.UnsignedInt
  orderId   Int      @db.UnsignedInt
  goodId    Int      @db.UnsignedInt
  content   String
  rate      Int?     @default(1) @db.UnsignedInt
  star      Int?     @default(5) @db.UnsignedInt
  reply     String?
  pics      Json?
  createdAt DateTime @default(now())
  updatedAt DateTime
  goods     goods    @relation(fields: [goodId], references: [id], map: "Comments_goodId_fkey")
  orders    orders   @relation(fields: [orderId], references: [id], map: "Comments_orderId_fkey")
  users     users    @relation(fields: [userId], references: [id], map: "Comments_userId_fkey")

  @@index([goodId], map: "Comments_goodId_fkey")
  @@index([orderId], map: "Comments_orderId_fkey")
  @@index([userId], map: "Comments_userId_fkey")
}

model goods {
  id           Int            @id @unique(map: "Goods_id_key") @default(autoincrement()) @db.UnsignedInt
  userId       Int            @db.UnsignedInt
  categoryId   Int            @db.UnsignedInt
  title        String         @db.VarChar(255)
  description  String         @db.VarChar(255)
  price        Float
  stock        Int
  cover        String         @db.VarChar(255)
  pics         Json
  details      String         @db.Text
  sales        Int?
  isOn         Int?
  isRecommend  Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  categories   categories     @relation(fields: [categoryId], references: [id], map: "Goods_categoryId_fkey")
  users        users          @relation(fields: [userId], references: [id], map: "Goods_userId_fkey")
  cart         cart[]
  comments     comments[]
  orderdetails orderdetails[]

  @@index([categoryId], map: "Goods_categoryId_fkey")
  @@index([userId], map: "Goods_userId_fkey")
}

model orderdetails {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  orderId   Int      @unique(map: "OrderDetails_orderId_key") @db.UnsignedInt
  goodId    Int      @db.UnsignedInt
  price     Float
  num       Int
  createdAt DateTime @default(now())
  updatedAt DateTime
  goods     goods    @relation(fields: [goodId], references: [id], map: "OrderDetails_goodId_fkey")
  orders    orders   @relation(fields: [orderId], references: [id], map: "OrderDetails_orderId_fkey")

  @@index([goodId], map: "OrderDetails_goodId_fkey")
}

model orders {
  id           Int           @id @unique(map: "Orders_id_key") @default(autoincrement()) @db.UnsignedInt
  userId       Int           @db.UnsignedInt
  orderNo      String
  amount       Float
  addressId    Int           @db.UnsignedInt
  status       Int?
  expressType  String?
  expressNo    String?
  payTime      DateTime?
  payType      String?
  tradNo       String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime
  address      address       @relation(fields: [addressId], references: [id], map: "Orders_addressId_fkey")
  users        users         @relation(fields: [userId], references: [id], map: "Orders_userId_fkey")
  comments     comments[]
  orderdetails orderdetails?

  @@index([addressId], map: "Orders_addressId_fkey")
  @@index([userId], map: "Orders_userId_fkey")
}

model slides {
  id        Int      @id @unique(map: "Slides_id_key") @default(autoincrement()) @db.UnsignedInt
  title     String
  img       String
  url       String?
  status    Int?     @default(0)
  seq       Int?     @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model users {
  id        Int        @id @unique(map: "Users_id_key") @default(autoincrement()) @db.UnsignedInt
  name      String     @db.VarChar(255)
  email     String     @unique(map: "Users_email_key") @db.VarChar(255)
  password  String     @db.VarChar(255)
  phone     String?    @unique(map: "Users_phone_key") @db.VarChar(255)
  avatar    String?    @db.VarChar(255)
  is_locked Int?       @default(0) @db.UnsignedInt
  role      String?    @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime
  address   address[]
  cart      cart[]
  comments  comments[]
  goods     goods[]
  orders    orders[]
}
